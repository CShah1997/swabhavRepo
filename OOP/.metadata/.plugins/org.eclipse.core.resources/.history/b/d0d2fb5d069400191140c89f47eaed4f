package com.techlab.file.analyzer;

import java.util.Map.Entry;
import java.util.*;

import com.techlab.employee.Employee;
import com.techlab.file.parser.FileDataParser;

public class Analyzer {
	private HashSet<Employee> setOfEmployee;
	private String MaximumSalariedEmployee;
	private double highestSalary;
	private static int MANAGER_COUNT, PRESIDENT_COUNT, ANALYST_COUNT,
			CLERK_COUNT, SALESMAN_COUNT;
	private static int DEPT_10_COUNT, DEPT_20_COUNT, DEPT_30_COUNT;

	public Analyzer(FileDataParser parser) {
		setOfEmployee = new HashSet<Employee>();
		setOfEmployee = new Employee().getEmployeeList();
	}

	public String getMaximumSalariedEmployee() {
		findMaximumSalariedEmployee();
		return MaximumSalariedEmployee + " has salary " + highestSalary;
	}

	public String getNumberOFEmployeeBasedOnDepartment() {
		findNumberOFEmployeeBasedOnDepartment();
		return "Department id 10 has : " + DEPT_10_COUNT + " Employee" + "\n"
				+ "Department id 20 has : " + DEPT_20_COUNT + " Employee"
				+ "\n" + "Department id 30 has : " + DEPT_30_COUNT
				+ " Employee";
	}

	public String getNumberOfEmployeeBasedOnDesignation() {
		findNumberOfEmployeeBasedOnDesignation();
		return "President : " + PRESIDENT_COUNT + "\nManager : "
				+ MANAGER_COUNT + "\nClerk : " + CLERK_COUNT + "\nSalesman : "
				+ SALESMAN_COUNT + "\nAnalyst : " + ANALYST_COUNT;
	}

	private void findMaximumSalariedEmployee() {
		for (Employee e : setOfEmployee) {
			if (highestSalary < e.getSalary()) {
				highestSalary = e.getSalary();
				MaximumSalariedEmployee = e.getName();
			}
		}
	}

	private void findNumberOfEmployeeBasedOnDesignation() {
		for (Employee e : setOfEmployee) {
			if (e.getDesignation().equalsIgnoreCase("MANAGER"))
				MANAGER_COUNT++;
			if (e.getDesignation().equalsIgnoreCase("PRESIDENT"))
				PRESIDENT_COUNT++;
			if (e.getDesignation().equalsIgnoreCase("CLERK"))
				CLERK_COUNT++;
			if (e.getDesignation().equalsIgnoreCase("SALESMAN"))
				SALESMAN_COUNT++;
			if (e.getDesignation().equalsIgnoreCase("ANALYST"))
				ANALYST_COUNT++;

		}
	}

	private void findNumberOFEmployeeBasedOnDepartment() {
		for (Employee e : setOfEmployee) {
			if (e.getDepartment() == 10)
				DEPT_10_COUNT++;
			if (e.getDepartment() == 20)
				DEPT_20_COUNT++;
			if (e.getDepartment() == 30)
				DEPT_30_COUNT++;
		}
	}

	/*public static int count = 1;

	public void getDesignation() {
		HashMap<String, Integer> designationMap = new HashMap<String, Integer>();
		for (Employee e : setOfEmployee) {
			String strTemp = e.getDesignation();
			for (Employee e1 : setOfEmployee) {
				if (e1.getDesignation().equalsIgnoreCase(strTemp)) {
					count++;
				}
			}
			designationMap.put(strTemp, count);
			count = 1;
		}
		for (String i : designationMap.keySet()) {
			System.out.println();
			System.out.println(i + " : " + designationMap.get(i));
		}

	}*/
	
	public int num;
	public void getDesignation()
	{
		HashMap<String, Integer> designationMap = new HashMap<String, Integer>();
		for (Employee e : setOfEmployee)
		{
			String tempDesignation = e.getDesignation();
			designationMap.put(tempDesignation,1);
			if(e.getDesignation().equalsIgnoreCase(tempDesignation))
			{
				num=designationMap.get(tempDesignation);
				num++;
			}
			designationMap.put(tempDesignation,num);
		}
		for (String i : designationMap.keySet()) {
			System.out.println();
			System.out.println(i + " : " + designationMap.get(i));
		}
	}
	
	
	
}
